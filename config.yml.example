#
# |__   __  __
# |  | |   |  |
# |__| |   |__|_
#
# Configuration File
#
# To use this, save it as config.yml in bra's working directory.
#

#
# The [driver] is the part of bra that interfaces with the playout system.  It
# is contained in a separate module space and loaded in by BRA.
#
driver:
  # Specify the module from which the driver is being loaded here.
  # This can be a relative path or a gem name.
  source: ./baps/driver

  # Place driver specific configuration here.
  host: localhost
  port: 1234
  username: example
  password: hunter2

#
# The [server] is the part of bra that interacts with the clients via HTTP.
#
server:
  # Choose the server Rack will run on here, as well as the host and port on
  # which it should listen for requests.
  rack: thin
  host: 0.0.0.0
  port: 8181

  # This setting allows you to mount the HTTP server on a subdirectory, which
  # is useful if you're proxying through to the server in Apache or suchlike.
  root: /

  # This should be changed to point to the directory containing the
  # /assets/ and /views/ subdirectories.
  root_directory: /home/mattbw/bra-ruby/lib/bra/server/

  # Cross-origin resource sharing config goes in here.
  # This is in the form of a dictionary mapping X, where "Access-Control-X" is
  # a CORS header, to a list of values to set for that header.
  cors:
    Allow-Origin:
      - "https://ury.org.uk"
    Allow-Headers:
      - accept
      - authorization
    Allow-Credentials:
      - "true"
    Allow-Methods:
      - "*"

  # This is where users for the server's authentication system can be defined,
  # and their permissions set.  The [users] section maps usernames to
  # information about that username.
  users:
    god:
      password: hunter2
      privileges:
        root: [get]
        player_set: [get, put, post, delete]
        player: [get, put, post]
        playlist_set: [get, put, post, delete]
        playlist: [get, put, post, delete]
        item: [get, put, post, delete]
        player_state: [get, put, post, delete]
        player_load_state: [get, put, post, delete]
        player_cue: [get, put, post, delete]
        player_intro: [get, put, post, delete]
        player_duration: [get, put, post, delete]
        player_position: [get, put, post, delete]
        # BAPS2
        x_baps: [get]
        x_baps_server: [get]
        x_baps_server_constant: [get]
        # Info
        info: [get]
        version: [get]
        channel_mode: [get]

#
# The [model] is the part of bra that tracks the playout system's state and
# allows it to be viewed and manipulated as a collection of objects.
#
model:
  # Specify the module from which the model structure is being loaded here.
  # This can be a relative path or a gem name.
  source: bra/models/structures/standard

  # Set the identifiers for the players here.  Certain drivers may restrict
  # what can go here.
  players: [0, 1, 2]
  # Set the identifiers for the playlists here.  Certain drivers may restrict
  # what can go here.
  playlists: [0, 1, 2]
