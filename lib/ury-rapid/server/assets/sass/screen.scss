@import 'compass/reset';
@import 'compass/utilities/general/clearfix';
@import 'compass/typography/links/link-colors';
@import 'compass/css3';

@import 'colour-palette';
@import 'colour-semantic';
@import 'fonts';
@import 'icons';
@import 'sizes';
@import 'ui-toolbar';

// Semantic colour names
@mixin border {
  padding: $size-padding;
}

a {
  @include link-colors(
    map-get($colour-light-blue, 500),
    map-get($colour-red, 500),
    map-get($colour-red, 500),
    map-get($colour-deep-purple, 500)
  );
}

html {
  @include font-normal;

  background-color: $colour-outer-bg;
  color: $colour-outer-fg;
  font-size: 16pt;
  text-align: center;

  strong {
    font-weight: bold;
  }
}

body {
  >section,
  >nav {
    display: table;
    font-size: 1rem !important;
    margin: $size-padding auto !important;
    max-width: 80%;
    text-align: left;
  }

  >header {
    background-color: $colour-header-bg;
    color: $colour-header-fg;
    text-align: left;

    >h1 {
      display: inline-block;
      font-size: 3rem;
      line-height: .8em;
      margin: 0;
      padding: $size-padding-thin;
    }

    >h2 {
      display: inline;
      font-size: 1.2rem;
      margin: 0;
    }
  }
}

h1,
h2,
h3 {
  @include font-title;

  font-size: 1.2em;
  margin-bottom: $size-padding;
  text-align: left;
}

section,
nav {
  @include border;

  font-size: .9em;
  position: relative;

  >h1 {
    // Transfer the margin into padding, so we can style the entire heading
    // bar without a nasty padding border around it.

    margin-left: -($size-padding);
    margin-right: -($size-padding);
    margin-top: -($size-padding);
    padding-bottom: $size-padding-thin;
    padding-left: $size-padding-thin;
    padding-right: $size-padding-thin;
    padding-top: $size-padding-thin;
  }
}

p:not(:last-child) {
  margin-bottom: $size-padding;
}

nav h1 {
  display: none;
}

// Make players and playlists line up horizontally.
.player_set,
.playlist_set {
  >div.set_contents {
    align-items: stretch;
    border-collapse: separate;
    border-spacing: $size-padding;
    display: flex;
    flex: 1;
    margin: 0 auto;

    >section {
      display: flex;
      flex: 1;
      flex-direction: column;
    }
  }
}

section.constant {
  // Remove lower margin on the value.
  p {
    margin: 0;
  }
}

// Nested variables have some special formatting.
div>section,
section>section {
  &.variable,
  &.constant {
    display: flex !important;

    h1 {
      @include font-normal;

      border-bottom: none !important;
      display: inline;
      font-size: 1em;
      font-weight: bold;
      margin: 4pt;
      margin-right: $size-padding-thin;
      padding: 0 !important;
    }

    p {
      display: inline;
      flex: 1;
      margin: 4pt;
      overflow: hidden;
      text-align: right;
      text-overflow: ellipsis;
      white-space: nowrap;
    }
  }
}

.item {
  @include border;
}

li.item,
p.item {
  // Stop line-breaking and force an ellipsis instead.
  overflow: hidden;
  padding: $size-padding-thin;
  padding-right: ($size-padding-thin + $size-in-out);
  position: relative;
  text-overflow: ellipsis;
  white-space: nowrap;
}

p.item {
  margin: $size-padding-thin;
}

ol.playlist-items {
  // Prevent duplicate borders.
  li {
    &:not(:first-child) {
      border-top: 0;
    }
  }
}

nav.main-menu {
  border: 0;
  text-align: center;

  li {
    @include border;

    display: inline-block;
    padding: $size-padding;
  }
}

nav.resources {
  clear: both;
}

@import 'nav-links';
@import 'json-consoles';

dt {
  font-weight: bold;
}

dd {
  margin-left: $size-padding;
}

@import 'model-styles-common';
@import 'model-styles-item-types';
@import 'model-styles-load-states';
@import 'model-styles-play-states';
@import 'model-styles-sets';
